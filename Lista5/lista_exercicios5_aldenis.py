# -*- coding: utf-8 -*-
"""Lista_Exercicios5_Aldenis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Hg2-VRqEOI8HgwPPWxflwiSR5pHr3s16

###IFPE Jaboatão
###Tecnologia em Análise e Desenvolvimento de Sistemas
###Disciplina: Lógica de Programação
###Professora: Havana Alves
###Aluno: Aldenis Everton Alves Guilherme de França

##Lista de Exercícios 5

1) Escreva um programa que leia inteiros do usuário e os armazene em uma lista.
Use o valor zero para parar a solicitação e armazenagem de valores. Após todos
os valores terem sido preenchidos, seu programa deve exibi-los em ordem
inversa, com cada valor aparecendo em uma linha.
"""

lista = [ ]
n = 1
while n != 0:
  n = int(input('Digite um número inteiro ou 0 para PARAR: '))
  if n == 0:
    print('\nOs valores digitados em ordem inversa são: \n')
    continue
  lista.append(n)
  
for i in lista[::-1]:
  print(i)

"""2) Escreva um programa que leia inteiros do usuário até que seja inserida uma
linha em branco. Uma vez que todos os inteiros tenham sido lidos seu programa
deve exibir todos os números negativos, seguidos de todos os zeros, seguidos
de todos os números positivos. Os elementos de cada um destes três grupos
devem ser impressos na mesma ordem em que foram inseridos na lista. Por
exemplo, se o usuário inseriu os valores 3, -4, 1, 0, -1, 0, -2, então o programa deve imprimir -4, -1, -2, 0 , 0 , 3 , 1.
"""

listaPositiva = []
listaNegativa = []
listaZero = []

n = 0
while n != '':
  n = input('Digite um número inteiro ou deixe em branco e dê ENTER para PARAR: ')
  if n == '':
    print('\nOs valores digitados são: \n')
    break
  n = int(n)
  if n > 0:
    listaPositiva.append(n)
  elif n < 0:
    listaNegativa.append(n)
  else:
    listaZero.append(n)

listaGeral = listaNegativa + listaZero + listaPositiva
listaGeral

"""3) Para ganhar a Mega Sena, é necessário que o apostador acerte todos os 6
números sorteados, que estão em um intervalo que vai de 1 a 60. Escreva um
programa que gere os 6 números sorteados e os armazene em uma lista.
Garanta que não haja valores duplicados. Exiba os números em ordem
crescente.
"""

from random import sample

mega = sample(range(1, 61), 6) #sample retorna valores únicos
mega.sort() #ordena em ordem crescente

print(f'Os 6 números da Mega Sena são: {mega}')

#Outra forma de fazer
from random import sample
mega = []

for i in range(0,6):
  if i == 6:
    break
  x = sample(range(1, 61),1)
  mega = mega + x

mega.sort()
print(f'Os 6 números da Mega Sena são: {mega}')

"""4) Faça um programa que manipula uma lista que contém modelos de carro e seu
consumo (km/l), da seguinte forma: [[‘Vectra’, 9], [‘Gol’, 10], [‘Corsa’, 11], [‘Fit’,12.5]]. O programa deve mostrar na tela o nome do modelo mais econômico.
Além disso, deve mostrar na tela quanto cada um desses modelos gastaria para
percorrer 1000 Km, assumindo que o valor do litro da gasolina é R$ 4,69.
"""

carros = [['VECTRA', 9],['GOL', 10], ['CORSA', 11],['FIT', 12.5]]

for x in carros :
    consumo = (1000 / x[1]) * 4.69
    print (f'O carro {x[0]} vai consumir R$ {consumo:.2f} ao percorrer 1.000 km.\n')

print (f'Logo, o Modelo de Carro mais Econômico é o: {carros[3][0]}.')

"""5) Faça um programa que receba a temperatura média de cada mês do ano e
armazene-as em uma lista. Em seguida, calcule a média anual das temperaturas
e mostre a média calculada juntamente com todas as temperaturas acima da
média anual, e em que mês elas ocorreram (mostrar o mês por extenso: 1 –
Janeiro, 2 – Fevereiro, . . . ).
"""

tempMeses = []
meses = ('Janeiro', 'Fevereiro', 'Março', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro')

for i in range(0, 12):
  temp = input(f'Digite a Temperatura Média do mês de {meses[i]} (em °C): ')
  temp = float(temp.replace(',','.'))
  tempMeses.append(temp)
mediaAnual = sum(tempMeses) / len(tempMeses)

print('')
print('-' * 60)
print('{:^60}'.format('RESULTADOS'))
print('-' * 60)
print(f'A Temperatura Média Anual é {mediaAnual:.2f} °C.')
print('')
print('Estes são os meses com as Temperaturas acima da Média Anual:\n ')

for x in range(0,12):
  if tempMeses[x] > mediaAnual:
    print(meses[x] + ': ' + str(tempMeses[x]) + ' °C')

"""6) Utilizando uma matriz, faça um programa que leia duas notas de dez alunos e
depois calcule e armazene a média dos mesmos na mesma matriz, ou seja, é
um array 10x3.
"""

import numpy as np

listaNota1 = []
listaNota2 = []
listaMedia = []

for i in range(0,10):
  nome = input('Digite o Nome do(a) aluno(a): ').upper().strip()
  nota1 = input(f'Digite a 1ª Nota de {nome}: ').strip()
  nota1 = float(nota1.replace(',','.'))
  nota2 = input(f'Digite a 2ª Nota de {nome}: ').strip()
  nota2 = float(nota2.replace(',','.'))
  print('')
  media = round(((nota1 + nota2) / 2),2)

  listaNota1.append(nota1)
  listaNota2.append(nota2)
  listaMedia.append(media)

matrizNotas = [listaNota1, listaNota2, listaMedia]
mat = np.array(matrizNotas)

print('')
print('-' * 60)
print('{:^60}'.format('RESULTADOS'))
print('-' * 60)
print('\nMatriz das Notas dos Alunos(as): \n')
transpMat = mat.T
transpMat

"""7) Utilize a matriz da questão anterior para exibir a quantidade de alunos com
média abaixo de 6.0 e a quantidade igual ou acima de 6.0.
"""

menor = maior = 0
medias = mat[2][:]
listaMedias = list(medias)

for i in range(0,len(listaMedias)):
  b = float(listaMedias[i])
  if b < 6:
    menor = menor + 1
  else:
    maior = maior + 1

print(f'Quantidade de alunos com média abaixo de 6.0: {menor}.\n')
print(f'Quantidade de alunos com média igual ou acima de 6.0: {maior}.')

"""8) O Zodíaco Chinês é composto por animais com ciclo de 12 anos. Uma maneira
simplificada de identificá-lo é verificando-se apenas o ano de seu nascimento do
seguinte modo:

Crie um programa que tenha uma tupla preenchida com os signos e seus
respectivos valores exibidos na tabela. Com a tupla criada, o usuário poderá
entrar com seu ano de nascimento, e o programa deve exibir qual é o signo
correspondente.
"""

tuplaZod = (('Macaco', 0),('Galo', 1),('Cão', 2),('Porco', 3),('Rato', 4),('Boi', 5),('Tigre', 6),('Coelho', 7),('Dragão', 8),('Serpente', 9),('Cavalo', 10),('Carneiro', 11))

ano = int(input('Informe o ano do seu nascimento: '))
restDiv = ano % 12

for i in range(0,len(tuplaZod)):
  #tuplaZod[i][1]
  if tuplaZod[i][1] == restDiv:
    print(f'\nJá que você nasceu em {ano}, pelo Zodíaco Chinês, seu signo é: {tuplaZod[i][0]}.')

"""9) Uma prova eletrônica possui 10 questões. Crie um algoritmo que receba de
vários usuários o seu nome e as respostas para cada questão (de A a E) e as
armazene em uma matriz (a matriz deve conter os nomes da pessoa e as
respostas delas). Ao final do preenchimento, as respostas de cada candidato
devem ser comparadas com o gabarito da prova que deve estar previamente cadastrado em uma tupla. Devem ser impressos, o nome de cada candidato, e a
sua nota final, sabendo que cada item vale 1 ponto. O gabarito da prova é
exibido a seguir:
A C E B D B B C A E
"""

import numpy as np

gabarito = ('A', 'C', 'E', 'B', 'D', 'B', 'B', 'C', 'A', 'E')

listaResp = []
listaNome = []
listaNota = []
nome = ''

while nome != 'FIM':
  nome = input('Digite o Nome do(a) aluno(a) ou FIM para encerrar: ').upper().strip()
  if nome == 'FIM':
    break
  listaNome.append(nome)
  certo = 0
  for i in range(1,11):
    resp = input(f'Digite a resposta da {i}ª questão: ')[0].upper().strip()
    listaResp.append(resp)
    if resp == gabarito[i-1]:
        certo = certo + 1
  listaNota.append(certo)
  print('')

matrizResp = [listaNome, listaResp]

print('')
for k in range(0,len(listaNome)):
  print(f'O(A) aluno(a) {listaNome[k]} tirou nota {listaNota[k]}.')

"""10)Crie um programa que leia e armazene o nome (no máximo 10 caracteres), o
valor de compra e o valor de venda de 10 produtos (deve ser pedido ao usuário).
Os valores de compra e venda devem ser armazenados em uma única matriz de
números, enquanto os nomes devem ficar em um vetor próprio. Após a leitura, o
programa deve ficar disponível para o usuário digitar o nome do produto que
está buscando para que seja exibido o lucro obtido com a venda deste produto.
O lucro é dado pela diferença entre o valor de venda e o valor de compra.
"""

nomeProduto = []
compraVenda = []
c = 0

for i in range(0,10):
  precos = []

  produto = input(f'Informe o nome do produto {i+1} (máximo 10 caracteres): ')[:10].upper()
  nomeProduto.append(produto)

  compra = float(input(f'Informe o valor de compra do(a) {produto}: R$ ').replace(",","."))
  precos.append(compra)

  venda = float(input(f'Informe o valor de venda do(a) {produto}: R$ ').replace(",","."))
  precos.append(venda)

  compraVenda.append(precos)
  print('')

produto = nomeProduto[0]
while produto in nomeProduto:
  busca = input('Informe o nome do produto para exibir o lucro com a sua venda: ').upper()
  if busca not in nomeProduto:
    print('Este produto não está cadastrado!')
    break
  
  indiceProduto = nomeProduto.index(busca)
  lucro = compraVenda[indiceProduto][1] - compraVenda[indiceProduto][0]
  print(f'O Lucro obtido com a venda de {busca} foi de R$ {lucro:.2f}')
  print('')