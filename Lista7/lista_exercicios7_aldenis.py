# -*- coding: utf-8 -*-
"""Lista_Exercicios7_Aldenis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Po4Rv9OLNFmO7UBjgA652a-KHK05LVMj

###IFPE Jaboatão
###Tecnologia em Análise e Desenvolvimento de Sistemas
###Disciplina: Lógica de Programação
###Professora: Viviane Aureliano
###Aluno: Aldenis Everton Alves Guilherme de França

##Lista de Exercícios 7

1. Usando o arquivo texto notas_estudantes.txt escreva um programa que imprime o nome dos alunos que têm mais de seis notas.
"""

lista=[]
arquivo = open("notas_estudantes.txt","r")

for linha in arquivo:
    valores = linha.split()
    if (len(valores)-1) > 6:
      nome = valores[0]
      lista.append(nome)
print('O(s) aluno(s) que têm mais de 6 notas é(são): ')
print(lista)

arquivo.close()

"""2. Usando o arquivo texto notas_estudantes.txt escreva um programa que calcula a média das notas de cada estudante e imprime o nome e a média de cada estudante."""

arquivo = open("notas_estudantes.txt","r")

for linha in arquivo:
  valores = linha.split()

  for i in valores:
    alunos = valores[0]
    notas = valores[1:]

    int_lista = list(map(int, notas))
    soma = sum(int_lista)
    media = soma/len(int_lista)
  print(f'A média das notas de {alunos} é {media:.2f}')
  print('')

arquivo.close()

"""3. Usando o arquivo texto notas_estudantes.txt escreva um programa que calcula a nota mínima e máxima de cada estudante e imprima o nome de cada aluno junto com a sua notá máxima e mínima."""

arquivo = open("notas_estudantes.txt","r")
aux_nota = 0
maior = menor = 0  

for linha in arquivo:
  valores = linha.split()

  alunos = valores[0]
  notas = valores[1:]
  int_lista = list(map(int, notas))

  for j in range(0,len(int_lista)):
    if j == 0:
      maior = menor = int_lista[j]
    else:
      if int_lista[j] > maior:
        maior = int_lista[j]
      if int_lista[j] < menor:
        menor = int_lista[j]

  print(f'A maior nota de {alunos} é {maior}.')
  print(f'A menor nota de {alunos} é {menor}.')
  print('')

arquivo.close()

"""8) Para ler um arquivo de .txt simples no Python, podemos utilizar a função open(),
que tem como parâmetro obrigatório o nome ou caminho onde está o arquivo.
Outro parâmetro importante, mas que já tem um valor padrão definido é o mode.
Este parâmetro indica em que modo o arquivo será aberto, como é possível ver
na tabela a seguir:

Caso nenhum valor seja definido para mode, o padrão é mode=’r’. Existem
outros parâmetros padrão que você pode conhecer nesse link
https://docs.python.org/3/library/functions.html#open.

Quando a função open é utilizada em modo leitura, ela retorna uma lista em que
cada elemento é uma linha escrita do arquivo. Com estas informações, crie duas
funções, uma para ler e exibir os dados de um arquivo e outra para escrever de
forma incremental os textos que o usuário for inserindo. Estas funções devem
ser chamados por um ou mais programas. O de escrita deve ser chamado
enquanto o usuário inserir textos não-vazios. Ao final, o programa deve exibir o
arquivo depois de escrito. Obs: Não esquecer de fechar o arquivo no fim da
leitura e da escrita.
"""

def Ler_Exibir_Dados(arquivo):
  with open(arquivo,'r') as file:
    texto = file.readlines()
    return texto

def Escrever(arquivo):
  with open(arquivo,'w') as arq:
    while True:
      dado = str(input('Digite informações para serem escritas no arquivo: '))
      print('')
      if dado == '':
        print('DADOS INSERIDOS NO ARQUIVO!')
        break
      arq.write(dado+'\n')

print('')
print('-' * 50)
print('{:^50}'.format('LENDO E ESCREVENDO EM UM ARQUIVO'))
print('-' * 50)
print('')

Escrever('planilhas.txt')

print('Este é o texto completo com os dados informados:\n')
x = Ler_Exibir_Dados('planilhas.txt')
for i in x:
  print(i)